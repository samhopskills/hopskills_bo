@page "/creategame"
@inject HttpClient Http

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using FluentValidation
@using Microsoft.AspNetCore.Components.Forms;
@using System.Security.Claims
@using MudBlazor.Utilities
@using static HopSkills.BackOffice.Client.Controls.AddQuestionFormComponent
@inject Microsoft.Extensions.Configuration.IConfiguration config;

@inject IDialogService DialogService

@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Bottom">

    @if (form1Validate)
    {
        <MudTimelineItem Color="Color.Info">
            <ItemContent>
                <MudText Color="Color.Info" Align="Align.Center">General Information</MudText>
            </ItemContent>
        </MudTimelineItem>
        <MudTimelineItem>
            <ItemContent>
                <MudText Align="Align.Center">Content Creation</MudText>
            </ItemContent>
        </MudTimelineItem>
    }
   
    @if (form2Validate)
    {
        <MudTimelineItem Color="Color.Success">
            <ItemContent>
                <MudText Color="Color.Success" Align="Align.Center">General Information</MudText>
            </ItemContent>
        </MudTimelineItem>
        @if(InputGame.multipleQuestions.Any())
        {
            <MudTimelineItem Color="Color.Success">
                <ItemContent>
                    <MudText Color="Color.Success" Align="Align.Center">Content Creation</MudText>
                </ItemContent>
            </MudTimelineItem>
        }
        else
        {
            <MudTimelineItem Color="Color.Info">
                <ItemContent>
                    <MudText Color="Color.Info" Align="Align.Center">Content Creation</MudText>
                </ItemContent>
            </MudTimelineItem>
        }
    }
</MudTimeline>
    <MudGrid Class="justify-center">
    <MudItem xs="12" sm="7">
            <MudPaper Class="pa-4">
                <MudStack Style="width: 100%">
                    @if (form1Validate)
                    {
                    <EditForm Model="@InputGame" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />
                        <MudGrid>
                            <MudItem xs="12">
                                <MudCard>
                                    <MudCardContent>
                                        <MudItem xs="12">
                                            <MudFileUpload T="IReadOnlyList<IBrowserFile>"
                                                           @ref="@_fileUpload"
                                                           @bind-Files="_model.Files"
                                                           For="@(() => _model.Files)"
                                                           AppendMultipleFiles="false"
                                                           Hidden="@false"
                                                           InputClass="absolute mud-width-full mud-height-full overflow-hidden z-10"
                                                           InputStyle="opacity:0"
                                                           ErrorText="@string.Empty"
                                                           tabindex="-1"
                                                           Accept=".png, .jpg"
                                                           @ondrop="@ClearDragClass"
                                                           @ondragenter="@SetDragClass"
                                                           @ondragleave="@ClearDragClass"
                                                           @ondragend="@ClearDragClass"
                                                           OnFilesChanged="LoadFiles">
                                                <ActivatorContent>
                                                    <MudPaper Outlined="true"
                                                              Class="@_dragClass">
                                                        <MudText Typo="Typo.h6">
                                                            Add an image
                                                        </MudText>
                                                        <div class="d-flex justify-center">
                                                            @if (!string.IsNullOrEmpty(InputGame.Image?.Content))
                                                            {
                                                                <MudImage Fluid="true"
                                                                          ObjectFit="ObjectFit.Cover"
                                                                          Src="@base64data" />
                                                            }
                                                        </div>
                                                    </MudPaper>
                                                </ActivatorContent>
                                            </MudFileUpload>
                                            @if (fileNameWrong)
                                            {
                                                <MudAlert Severity="MudBlazor.Severity.Error">
                                                    File Name contains special characters. 
                                                    Please Upload a file with no special 
                                                    characters and less than 255 characters.
                                                </MudAlert>
                                            }
                                            <MudToolBar Gutters="@false"
                                                        Class="relative d-flex justify-end gap-4">
                                                <MudButton Color="Color.Primary"
                                                           OnClick="@OpenFilePickerAsync"
                                                           Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Image">
                                                    Upload
                                                </MudButton>
                                                <MudButton Color="Color.Error"
                                                           Disabled="@(_model.Files is null || !_model.Files.Any())"
                                                           OnClick="@ClearAsync"
                                                           Variant="Variant.Filled">
                                                    Clear
                                                </MudButton>
                                            </MudToolBar>
                                        </MudItem>
                                        <MudItem>
                                            @if (_fileUpload?.ValidationErrors.Any() ?? false)
                                            {
                                                <MudText Color="Color.Error"
                                                         Typo="@Typo.caption">
                                                    @_fileUpload?.ValidationErrors[0]
                                                </MudText>
                                            }
                                        </MudItem>
                                        <MudItem xs="12">
                                        </MudItem>
                                        <MudGrid>
                                            <MudItem xs="12" sm="6" md="4">
                                                <MudTextField T="string" Required="true" @bind-Value="@InputGame.Title"
                                                              UserAttributes="@(new() { { "aria-required", "true" } } )"
                                                              Label="Title" For="@(() => InputGame.Title)" Variant="Variant.Outlined" />
                                            </MudItem>
                                            <MudItem xs="12" sm="6" md="4">
                                                <MudSelect T="string" Required="true"
                                                           @bind-Value="@InputGame.DifficultyLevel"
                                                           Placeholder="Select a difficulty level"
                                                           UserAttributes="@(new() { { "aria-required", "true" } } )"
                                                           For="@(() => InputGame.DifficultyLevel)"
                                                           Label="Difficulty level" Variant="Variant.Outlined"
                                                           AnchorOrigin="Origin.BottomCenter">
                                                    <MudSelectItem T="string" Value="@("Easy")" />
                                                    <MudSelectItem T="string" Value="@("Medium")" />
                                                    <MudSelectItem T="string" Value="@("Hard")" />
                                                </MudSelect>
                                            </MudItem>
                                            <MudItem xs="12" sm="6" md="4">
                                                <MudSelect T="string" Required="false"
                                                           @bind-Value="@InputGame.PriorGame" Placeholder="Select a game"
                                                           Label="Game to complete before" Variant="Variant.Outlined"
                                                           AnchorOrigin="Origin.BottomCenter">
                                                    @foreach (var item in Games)
                                                    {
                                                        <MudSelectItem T="string" Value="@(item.Title)" />
                                                    }
                                                </MudSelect>
                                            </MudItem>
                                        </MudGrid>
                                        <MudGrid>
                                            <MudItem xs="12" sm="6" md="4">
                                                <MudSelect T="string" Required="true" For="@(() => InputGame.Theme)"
                                                           @bind-Value="@InputGame.Theme" Placeholder="Select a Theme"
                                                           UserAttributes="@(new() { { "aria-required", "true" } } )"
                                                           Label="Theme related to" Variant="Variant.Outlined"
                                                           AnchorOrigin="Origin.BottomCenter">
                                                    <MudSelectItem T="string" Value="@("Theme A")" />
                                                    <MudSelectItem T="string" Value="@("Theme B")" />
                                                    <MudSelectItem T="string" Value="@("Theme C")" />
                                                </MudSelect>
                                            </MudItem>
                                            <MudItem xs="12" sm="6" md="4">
                                                <MudSelect T="string" Required="true" For="@(() => InputGame.ElligibleSub)"
                                                           @bind-Value="@InputGame.ElligibleSub" Placeholder="Select a Subscription"
                                                           UserAttributes="@(new() { { "aria-required", "true" } } )"
                                                           Label="Eligible subscription" Variant="Variant.Outlined"
                                                           AnchorOrigin="Origin.BottomCenter">
                                                    <MudSelectItem T="string" Value="@("Sub A")" />
                                                    <MudSelectItem T="string" Value="@("Sub B")" />
                                                    <MudSelectItem T="string" Value="@("Sub C")" />
                                                </MudSelect>
                                            </MudItem>
                                        </MudGrid>
                                        <MudGrid>
                                            <MudItem xs="12">
                                                <MudTextField Required="true" For="@(() => InputGame.Description)"
                                                              UserAttributes="@(new() { { "aria-required", "true" } } )"
                                                              @bind-Value="@InputGame.Description" InputMode="InputMode.text"
                                                              T="string" Label="Enter a description" AutoGrow="true" Variant="Variant.Filled" Lines="5" />
                                            </MudItem>
                                        </MudGrid>
                                    </MudCardContent>
                                    <MudCardActions>
                                        <MudButton 
                                            ButtonType="ButtonType.Submit" 
                                            Variant="Variant.Filled" Color="Color.Primary"
                                                   Class="ml-auto" EndIcon="@Icons.Material.Filled.NavigateNext">Next</MudButton>
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                        </MudGrid>
                    </EditForm>
                    }
                @if (form2Validate)
                    {
                    <div class="object-left">
                        <MudButton Size="Size.Medium" ButtonType="ButtonType.Button"
                                   OnClick="NavigateToPreviousGameForm"
                                   Color="Color.Error" StartIcon="@Icons.Material.Filled.NavigateBefore"
                                   Variant="Variant.Filled">
                            Back
                        </MudButton>
                    </div>
                         @if (addQuestionForms is not null && addQuestionForms.Any())
                    {
                        foreach (var form in addQuestionForms)
                        {
                            <AddQuestionFormComponent questionFormInput="form.questionFormInput"
                                                      OnValidEvent="CreateFormValid"
                                                      OnCancelEvent="CreateFormCanceled">
                            </AddQuestionFormComponent>
                        }
                    }
                    else
                    {
                        <MudGrid Justify="Justify.Center">
                            <MudButtonGroup>
                                <MudButton StartIcon="@Icons.Material.Rounded.Add" Ripple="true">Add a quizz</MudButton>
                                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
                                    <MudMenuItem  OnClick="() => AddFirstQuizz()">Multiple choices question</MudMenuItem>
                                    <MudMenuItem OnClick="() => SaveGame(1)">True or False</MudMenuItem>
                                </MudMenu>
                            </MudButtonGroup>
                        </MudGrid>
                    }
                    }
                </MudStack>
            </MudPaper>
    </MudItem>
    <MudItem>
        <MudPaper Class="gap-4 pa-4 mud-height-full">
            <MudGrid>
                <MudItem Class="d-flex justify-start flex-grow-1 gap-4">
                    <MudText Class="d-inline-flex pa-4">Title:@InputGame.Title </MudText>
                    <MudText Class="d-inline-flex justify-end pa-4">
                        <MudIcon Icon="@Icons.Material.Outlined.Timer" />@InputGame.TotalDuration
                    </MudText>
                </MudItem>
                <MudItem Class="d-flex justify-end flex-grow-1 gap-4">
                    <MudText Class="d-inline-flex pa-4">Theme:@InputGame.Theme</MudText>
                    <MudText Class="d-inline-flex pa-4">
                        <MudIcon Icon="@Icons.Material.Outlined.Star" />@InputGame.TotalXperience
                    </MudText>
                </MudItem>
            </MudGrid>
            <MudDivider DividerType="DividerType.FullWidth" />
            <MudGrid Style="object-position:bottom">
                <MudItem xs="12" sm="12" md="12" xl="12">
                        <MudPaper Style="border-radius: 24px !important;">
                        <MudExpansionPanels MultiExpansion="true">
                            @foreach(var item in InputGame.multipleQuestions)
                            {
                                <MudExpansionPanel Text="@item.Question">
                                    @if (item.PossibleAnswers is not null 
                                    && item.PossibleAnswers.Count != 0)
                                    {
                                        @foreach (var answ in item.PossibleAnswers)
                                        {
                                            <MudText>@answ.Answer 
                                                <MudIcon 
                                                    Icon="@(answ.IsCorrect? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" 
                                                    Color="@(answ.IsCorrect? Color.Success : Color.Error)" /></MudText>
                                        }
                                    }
                                </MudExpansionPanel>
                            }
                            </MudExpansionPanels>
                    </MudPaper>
                </MudItem>
            </MudGrid>
            @if (form2Validate)
            {
                @if (InputGame.multipleQuestions.Any())
                {
                    <MudGrid Justify="Justify.Center">
                    <MudItem>
                        <MudButton ButtonType="ButtonType.Button"
                                   EndIcon="@Icons.Material.Filled.Add"
                                   Color="Color.Primary"
                                   OnClick="AddQuizz">
                            Add an new quizz
                        </MudButton>
                    </MudItem>
                </MudGrid>
                    <MudGrid>
                        <MudItem>
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                <MudButton>Save As</MudButton>
                                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
                                    <MudMenuItem OnClick="() => SaveGame(0)">Draft</MudMenuItem>
                                    <MudMenuItem OnClick="() => SaveGame(1)">And Publish</MudMenuItem>
                                </MudMenu>
                            </MudButtonGroup>
                        </MudItem>
                    </MudGrid>
                }
            }
        </MudPaper>
    </MudItem>
</MudGrid>


